<?php
    /**
    * 手机版 用户中心
    */
    class UserAction extends MobileAction
    {
        
         public function index()
         {   
			  
		     $data = M('escrow_account')->field('*')->where('uid='.$this->uid)->find();
			 if(empty($data)){
			      $this->assign("is_bangding",1);
			   }
             $this->display();
         }
         
         /**
         * 个人资料
         */
         public function info()
         {
             $this->assign("kflist",get_admin_name());
             $pre = C('DB_PREFIX');
             $rule = M('ausers u')->field('u.id,u.qq,u.phone')->join("{$pre}members m ON m.customer_id=u.id")->where("u.is_kf =1 and m.customer_id={$minfo['customer_id']}")->select();
             foreach($rule as $key=>$v){
                $list[$key]['qq']=$v['qq'];
                $list[$key]['phone']=$v['phone'];
             }
             $this->assign("kfs",$list);
        
             $minfo =getMinfo($this->uid,true);

             $this->assign("minfo",$minfo);
             $this->display();
         }
         
         /**
         * 资金信息
         */
         public function fund()
         {
             $this->assign('pcount', get_personal_count($this->uid));   
             $this->assign('benefit', get_personal_benefit($this->uid));   //收入
             $minfo =getMinfo($this->uid,true);
             $this->assign("minfo",$minfo); 
             $this->display();
         }
         
         /**
         * 我要提现
         */
         public function cash()
         {
             if($this->isAjax()){
                  $money = $this->_post('money');
                  $paypass = $this->_post('paypass');
                  $status = checkCash($this->uid, $money, $paypass);
                  if($status == 'TRUE'){
                      die('TRUE');
                  }else{
                      die('<font color=red>'.$status.'</font>');   
                  }
             }else{
                 $pre = C('DB_PREFIX');
                 $field = "m.user_name,m.user_phone,(mm.account_money+mm.back_money) all_money,mm.account_money,mm.back_money,i.real_name,b.bank_num,b.bank_name,b.bank_address";
                 $vo = M('members m')->field($field)->join("{$pre}member_info i on i.uid = m.id")->join("{$pre}member_money mm on mm.uid = m.id")->join("{$pre}member_banks b on b.uid = m.id")->where("m.id={$this->uid}")->find();
                 //print_r($vo);exit;
                 if(empty($vo['bank_num'])) 
                    $this->error("请用电脑登录先绑定银行卡后申请提现！");
                  /* */ 
                    
                 $tqfee = explode( "|", $this->glo['fee_tqtx']);
                 $fee[0] = explode( "-", $tqfee[0]);
                 $fee[1] = explode( "-", $tqfee[1]);
                 $fee[2] = explode( "-", $tqfee[2]);
                 $this->assign( "fee",$fee);
                 $borrow_info = M("borrow_info")
                            ->field("sum(borrow_money+borrow_interest+borrow_fee) as borrow, sum(repayment_money+repayment_interest) as also")
                            ->where("borrow_uid = {$this->uid} and borrow_type=4 and borrow_status in (0,2,4,6,8,9,10)")
                            ->find();
                 $vo['all_money'] -= $borrow_info['borrow'] + $borrow_info['also'];
                 $this->assign("borrow_info", $borrow_info);
                 $this->assign( "vo",$vo);
                 $this->assign("memberinfo", M('members')->find($this->uid));
                 $this->display(); 
             }  
         }
         /**
         * 投资总表
         */
         public function invest()
         {
               	$map['investor_uid'] = $this->uid;
   
   /***********回收中的投资*****/
                 $map['status'] = 4;
        
        
		$list1 = getTenderList($map,15);
		

		  $this->assign("backlist",$list1);
		 
  /**************竞标的投资*************/

		
		    $map['status'] = 1;
		
		$list2 = getTenderList($map,15);
		
          $this->assign("jinlist",$list2);

  /******************已回收************/
               
		        $map['status'] = array("in","5,6");
                $list3 = getTenderList($map,15);
			
            
            $this->assign("yibanklist",$list3);
  /***************逾期******************/
        $map1['investor_uid'] = $this->uid;
        $map1['d.status'] = array('neq',0);
		$map1['d.repayment_time'] = array('eq',"0");
		$map1['d.deadline'] = array('lt',time());
		$map1['d.investor_uid'] = $this->uid;
		
		$list4 = getMBreakInvestList($map1,15);
        $this->assign("yuqilist",$list4);
         $this->display();


         }
         public function loan()
         {
             $this->assign("mx",getMemberBorrowScan($this->uid));
             $this->display();   
         }
         /**
         * 安全中心
         */
         public function safe()
         {  

             $user=M('members')->find($this->uid);
             $this->assign("memberinfo", M('members')->find($this->uid));
             $this->assign("mstatus", M('members_status')->field(true)->find($this->uid)); 
             $this->assign("memberdetail", M('member_info')->find($this->uid));
             $paypass = M("members")->field('pin_pass')->where('id='.$this->uid)->find();
             $this->assign('paypass', $paypass['pin_pass']);
             $this->display();
         }
         /**
         * 设置支付密码
         */
         public function setPayPass()
         {
            if($this->isAjax()){
                $password = $this->_post('password');
                $paypass = $this->_post('paypass');
                $paypass2 = $this->_post('paypass2');
                if(!$password || !$paypass || !$paypass2){
                    die('数据不完整，请检查后再试');
                }
                $paypass == $password && die('不能和登陆密码相同，请重新输入');
                $paypass != $paypass2 && die('两次支付密码不一致，请重新输入');
                $user = M('members')->field('user_pass, pin_pass')->where('id='.$this->uid)->find();
                !$user  && die('数据有误');
                if($user['user_pass']!=md5($password)){
                    die('登陆密码不正确');   
                }
                if(M("members")->where('id='.$this->uid)->save(array('pin_pass'=>md5($paypass)))){
                    die('TRUE');
                }else{
                    echo '设置出错，刷新页面重试';   
                }
                
            }else{
                $this->display();
            } 
         }
         /**
         * 修改支付密码
         * 
         */
         public function editpaypass()
         {   
             if($this->isAjax()){
                $oldpass = $this->_post('oldpass');
                $paypass = $this->_post('paypass');
                $paypass2 = $this->_post('paypass2');
                if(!$oldpass || !$paypass || !$paypass2){
                    die('数据不完整，请检查后再试');
                }
                $paypass == $oldpass && die('新密码不能和旧密码相同，请重新输入');
                $paypass != $paypass2 && die('两次支付密码不一致，请重新输入');
                $user = M('members')->field('pin_pass')->where('id='.$this->uid)->find();
                !$user  && die('数据有误');
                if($user['pin_pass']!=md5($oldpass)){
                    die('支付密码不正确');   
                }
                if(M("members")->where('id='.$this->uid)->save(array('pin_pass'=>md5($paypass)))){
                    die('TRUE');
                }else{
                    echo '设置出错，刷新页面重试';   
                } 
                 
             }else{
                $this->display(); 
             }
         }
         
         /**
         * 修改登录密码
         * 
         */
         public function editpass()
         {
             if($this->isAjax()){
                $oldpass = $this->_post('oldpass');
                $password = $this->_post('password');
                $password2 = $this->_post('password2');
                if(!$oldpass || !$password || !$password2){
                    die('数据不完整，请检查后再试');
                }
                $password == $oldpass && die('新密码不能和旧密码相同，请重新输入');
                $password != $password2 && die('两次密码不一致，请重新输入');
                $user = M('members')->field('user_pass')->where('id='.$this->uid)->find();
                !$user  && die('数据有误');
                if($user['user_pass']!=md5($oldpass)){
                    die('旧密码不正确');   
                }
                if(M("members")->where('id='.$this->uid)->save(array('user_pass'=>md5($password)))){
                    die('TRUE');
                }else{
                    echo '设置出错，刷新页面重试';   
                } 
                 
             }else{
                $this->display(); 
             }
         }
         
         /**
         * 资金记录
         */
         public function  records()
         {
            $logtype = C('MONEY_LOG');
            $this->assign('log_type',$logtype);

            $map['uid'] = $this->uid;
            $list = getMoneyLog($map,15);
            $this->assign("list",$list['list']);        
            $this->assign("pagebar",$list['page']);    
            $this->assign("query", http_build_query($search));
            $this->display();
         }
         
         public function msg()
         {
             if($this->isAjax()){
                $id = $this->_get('id');
                $msg = M('inner_msg')->field('msg')->where('id='.$id.' and uid='.$this->uid)->find();
                if(count($msg)){
                    M('inner_msg')->where('id='.$id)->save(array('status'=>1));
                    echo $msg['msg'];
                }else{
                    echo '<font color=\'red\'>读取错误</font>';
                }

             }else{
                $map['uid'] = $this->uid;
                //分页处理
                import("ORG.Util.Page");
                $count = M('inner_msg')->where($map)->count('id');
                $p = new Page($count, 15);
                $page = $p->show();
                $Lsql = "{$p->firstRow},{$p->listRows}";
                //分页处理
                $list = M('inner_msg')->where($map)->order('status asc,id DESC')->limit($Lsql)->select();

                $this->assign("list",$list);
                $this->assign("pagebar",$page);
                $this->assign("count",$count);
                $this->display();     
             }
                
         }

     public function seemsg(){  
	      $id=intval($_GET['id']);
		  $vo=M("inner_msg")->where("id={$id}")->find();
		//  dump($vo);
		  $this->assign("vo",$vo);
		  $this->display();
	 
	   }


      public function summary(){
	    	//每次登陆都自动对账
		import("ORG.Loan.Escrow");
        $loan = new Escrow();
        $qdd = M("escrow_account")->field('qdd_marked')->where('uid='.$this->uid)->find();
        $balance  = $loan->balance($qdd['qdd_marked']);
        if(!empty($balance)){
            $benefit = get_personal_benefit($this->uid);
            $money_collect = $benefit['capital_interest'];// 代收本息
            $Funds = explode('|', $balance);
            $money = M('member_money')->field('back_money, money_freeze, money_collect, account_money')->where('uid='.$this->uid)->find();
            $account_money = $Funds[0];
            
            $affect_money = ($account_money-$money['account_money']-$money['back_money'])+($Funds[2]-$money['money_freeze'])+($money_collect - $money['money_collect']);
            $moneylog['uid'] =  $this->uid;
            $moneylog['type'] = 51;
            $moneylog['affect_money'] = $affect_money; //影响
            $moneylog['account_money'] = $account_money;   // 账户余额
            $moneylog['back_money'] = 0.00;    //回款已废弃
            $moneylog['collect_money'] =  $money_collect;  // 代收
            $moneylog['freeze_money']  =  $Funds[2];  // 冻结
            $moneylog['info'] = '自动对账';
            $moneylog['add_time'] = time();
            $moneylog['add_ip'] = get_client_ip();
            $moneylog['target_uid'] = 0;
            $moneylog['target_uname'] = '第三方托管';
            $model = M('member_money');
			if($affect_money!=0){
				$money_log_rec = M("member_moneylog")->add($moneylog);
				$money_rec = M('member_money')->where('uid='.$this->uid)->save(array('account_money'=>$account_money, 'back_money'=>0.00, 'money_freeze'=>$Funds[2], 'money_collect'=>$money_collect));
			}
		}

		$vlist = getMemberMoneySummary($this->uid);
		$this->assign("vo",$vlist);
		

        $this->assign('pcount', get_personal_count($this->uid)); 

		$minfo =getMinfo($this->uid,true);
		$index_zjze=$minfo['account_money']+$minfo['back_money']+$minfo['money_collect']+$minfo['money_freeze'];
        $this->assign("minfo",$minfo); 
        $this->assign('benefit', get_personal_benefit($this->uid));   //收入
        $this->assign('out', get_personal_out($this->uid));      //支出
		$this->display();
	  
	   }

  public function chargelog(){
         $map['uid'] = $this->uid;
        
        if($_GET['start_time']&&$_GET['end_time']){
            $_GET['start_time'] = strtotime($_GET['start_time']." 00:00:00");
            $_GET['end_time'] = strtotime($_GET['end_time']." 23:59:59");
            
            if($_GET['start_time']<$_GET['end_time']){
                $map['add_time']=array("between","{$_GET['start_time']},{$_GET['end_time']}");
                $search['start_time'] = $_GET['start_time'];
                $search['end_time'] = $_GET['end_time'];
            }
        }
        $list = getChargeLog($map,10);
        $this->assign('search',$search);
        $this->assign("list",$list['list']);
        $this->assign("pagebar",$list['page']);
        $this->assign("success_money",$list['success_money']);
        $this->assign("fail_money",$list['fail_money']);
        
       $this->display();
    }


 
 	/*
	 *验证身份证
	*/  			 
	
    public function  cardid(){
	   $parm=array();
       $parm['id_status']=array('eq',1);
	   $parm['uid']=array('eq',$this->uid);
	   $vo=M("members_status")->where($parm)->find();
	   if(!empty($vo)){
	   $userinfo=M("member_info")->field("idcard,real_name,card_img,card_back_img")->where("uid={$this->uid}")->find(); 
	     $this->assign("userinfo",$userinfo);
	     }else{
		  $rsstauts=setMemberStatus($this->uid, 'id', 1, 10, '身份证号');
	       $this->success("实名资料还没有认证！", U('/m/user/editecardid'));	
		   exit(); 
		 
		 }
	   $this->assign("username",$this->uname);
       $this->display();
	
	
	 }	 
  
  public function editecardid(){
        $userinfo=M("member_info")->field("idcard,real_name,card_img,card_back_img")->where("uid={$this->uid}")->find(); 
		
	    $this->assign("userinfo",$userinfo);
	    $this->display();
	
	 }	
	 
	public  function docardid(){
	   $cardid=$_POST['idcard'];
	   $real_name=$_POST['real_name'];
       if(!preg_match("/^(\d{18,18}|\d{15,15}|\d{17,17}x)$/",$cardid)){
		  $this->error("身份证不合法");
		  exit();
		} 
	   $data['idcard']=$cardid;
	   $data['real_name']=$real_name;
	 

	   
	
	  
	
		    $sel=M("member_info")->where("uid={$this->uid}")->find();
		if(!empty($sel)){
		    $rs=M("member_info")->where("uid={$this->uid}")->save($data);
		}else{
		    $data['uid']=$this->uid;
		    $data['up_time']=time();
		    $rs=M("member_info")->add($data);
		 }
		  
	  if($rs!==false)
	  $this->success("认证成功",U("./m/user/"));
	    else
	  $this->error("认证失败");	
	 
		
		
		 
	 
      	
	  
	 } 


     
	         /**
		 *验证手机号
		  
		**/ 
 public function editephone(){
	  $status=M("members_status")->field("phone_status")->where("uid={$this->uid}")->find(); 
	   if($status['phone_status']){
		   $mobile=M("members")->field("user_phone")->where("id={$this->uid}")->find();
	       $this->assign("oldphone",$mobile['user_phone']);
	    }
         
	     $this->display();
		 
	   }  	
public function setphone(){
	     $mobilenum=$_POST['mobilenum'];
		 $phonecode=$_POST['phonecode'];
		 if(session('code_temp')!=$phonecode){
				  die("验证码不正确");
				 }
				 
	   $yzmobile=M("members")->where("user_phone='{$mobilenum}'")->find();
	   if(!empty($yzmobile)){
	       die("手机号已存在");
	    }			 
				 
	    $data['user_phone']=$mobilenum;
        $rs=M("members")->where("id={$this->uid}")->save($data);
          if(!empty($rs)){
		    setMemberStatus($this->uid, 'phone', 1, 10, '手机');
			  die('TRUE');
		  }else{
		  
		      die('false');
		  }		
	  
	  
	   }				 
	 
  /*
	    **邮箱验证
	 */
  
   public function setemail(){
      $status=M("members_status")->field("email_status")->where("uid={$this->uid}")->find(); 
	   if($status['email_status']){
		   $email=M("members")->field("user_email,user_name")->where("id={$this->uid}")->find();
	       $this->assign("oldemail",$email['user_email']);
		   $this->assign("uname",$email['user_name']);
	    }
	     $this->display();
   
   
    }

	
   public function dosetemail(){
       $email=$_POST['email'];
	   
	  $yzemail=M("members")->where("user_email='{$email}'")->find();
	  if(!empty($yzemail)){
	  
	    die("邮箱已被人占用");
	   } 
	   
	   if(!empty($email)){
	       $data['user_email']=$email;
		   $rs1=M('members')->where("id={$this->uid}")->save($data);
		  setMemberStatus($this->uid, 'email', 1, 10, '邮箱');
		     if($rs1){
			       die("TRUE");
			   }else{
			       die("认证失败");
			   }
		   }else{
		   
		     die("参数有误");
		   }
   
     }
	    

   public function oldmobile(){
	   
	$code = rand_string_reg(6, 1, 2);
	$datag = get_global_setting();
	$is_manual = $datag['is_manual'];
	$smsTxt = FS("Webconfig/smstxt");
    $smsTxt = de_xie($smsTxt);
    $phone = text($_POST['cellphone']);
    
	
	$mb=M("members")->field("user_phone,user_name")->where("id={$this->uid}")->find();
	 if($phone!=$mb['user_phone']){
	    $this->ajaxReturn(0,"原手机号不符",0);
	  }else{
	      $res = sendsms($phone, str_replace(array("#UserName#", "#CODE#"), array($mb['user_name'], $code), $smsTxt['verify_phone']));
		  session("temp_phone", $phone);
          $this->ajaxReturn(1,"成功发送",1); 
	   }
	 
   
     
   }
   

   public function yzoldphonecode(){
   
    $phonecode=session('code_temp');
    $cellcode=text($_POST['cellcode']);
	if($phonecode==$cellcode){
	      $this->ajaxReturn(1,"验证码正确",1);
	 }else{
	      $this->ajaxReturn(0,'验证码错误',0);
	  }
 
   
    }
	 


        
    }
?>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      